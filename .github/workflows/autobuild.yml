name: GameCI Template 🎮

on:
  push:
    branches:
      - main

env:
  UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}

jobs:
  buildWebGL:
    name: Build for WebGL 🌐
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Create LFS file list
        run: git lfs ls-files -l | cut -d' ' -f1 | sort > .lfs-assets-id

      - name: Restore LFS cache
        uses: actions/cache@v2
        id: lfs-cache
        with:
          path: .git/lfs
          key: ${{ runner.os }}-lfs-${{ hashFiles('.lfs-assets-id') }}

      - name: Git LFS Pull
        run: |
          git lfs pull
          git add .
          git reset --hard

      - name: Restore Library cache
        uses: actions/cache@v2
        with:
          path: Library
          key: Library-build-WebGL
          restore-keys: |
            Library-build-
            Library-

      - uses: game-ci/unity-builder@v2
        with:
          targetPlatform: WebGL

      - uses: actions/upload-artifact@v2
        with:
          name: build-WebGL
          path: build/WebGL

  buildWindows:
    name: Build for Windows 🖥️
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Create LFS file list
        run: git lfs ls-files -l | cut -d' ' -f1 | sort > .lfs-assets-id

      - name: Restore LFS cache
        uses: actions/cache@v2
        id: lfs-cache
        with:
          path: .git/lfs
          key: ${{ runner.os }}-lfs-${{ hashFiles('.lfs-assets-id') }}

      - name: Git LFS Pull
        run: |
          git lfs pull
          git add .
          git reset --hard

      - name: Restore Library cache
        uses: actions/cache@v2
        with:
          path: Library
          key: Library-build-StandaloneWindows64
          restore-keys: |
            Library-build-
            Library-

      - uses: game-ci/unity-builder@v2
        with:
          targetPlatform: StandaloneWindows64

      - uses: actions/upload-artifact@v2
        with:
          name: build-StandaloneWindows64
          path: build/StandaloneWindows64

  buildmacOS:
    name: Build for macOS 🖥️
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Create LFS file list
        run: git lfs ls-files -l | cut -d' ' -f1 | sort > .lfs-assets-id

      - name: Restore LFS cache
        uses: actions/cache@v2
        id: lfs-cache
        with:
          path: .git/lfs
          key: ${{ runner.os }}-lfs-${{ hashFiles('.lfs-assets-id') }}

      - name: Git LFS Pull
        run: |
          git lfs pull
          git add .
          git reset --hard

      - name: Restore Library cache
        uses: actions/cache@v2
        with:
          path: Library
          key: Library-build-StandaloneOSX
          restore-keys: |
            Library-build-
            Library-

      - uses: game-ci/unity-builder@v2
        with:
          targetPlatform: StandaloneOSX

      - uses: actions/upload-artifact@v2
        with:
          name: build-StandaloneOSX
          path: build/StandaloneOSX

  buildLinux:
    name: Build for Linux 🖥️
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Create LFS file list
        run: git lfs ls-files -l | cut -d' ' -f1 | sort > .lfs-assets-id

      - name: Restore LFS cache
        uses: actions/cache@v2
        id: lfs-cache
        with:
          path: .git/lfs
          key: ${{ runner.os }}-lfs-${{ hashFiles('.lfs-assets-id') }}

      - name: Git LFS Pull
        run: |
          git lfs pull
          git add .
          git reset --hard

      - name: Restore Library cache
        uses: actions/cache@v2
        with:
          path: Library
          key: Library-build-StandaloneLinux64
          restore-keys: |
            Library-build-
            Library-

      - uses: game-ci/unity-builder@v2
        with:
          targetPlatform: StandaloneLinux64

      - uses: actions/upload-artifact@v2
        with:
          name: build-StandaloneLinux64
          path: build/StandaloneLinux64

  buildAndroid:
    name: Build for Android 📱
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Create LFS file list
        run: git lfs ls-files -l | cut -d' ' -f1 | sort > .lfs-assets-id

      - name: Restore LFS cache
        uses: actions/cache@v2
        id: lfs-cache
        with:
          path: .git/lfs
          key: ${{ runner.os }}-lfs-${{ hashFiles('.lfs-assets-id') }}

      - name: Git LFS Pull
        run: |
          git lfs pull
          git add .
          git reset --hard

      - name: Restore Library cache
        uses: actions/cache@v2
        with:
          path: Library
          key: Library-build-Android
          restore-keys: |
            Library-build-Android
            Library-Android

      - uses: game-ci/unity-builder@v2
        with:
          targetPlatform: Android

      - uses: actions/upload-artifact@v2
        with:
          name: build-Android
          path: build/Android

  buildiOS:
    name: Build for iOS 📱
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Create LFS file list
        run: git lfs ls-files -l | cut -d' ' -f1 | sort > .lfs-assets-id

      - name: Restore LFS cache
        uses: actions/cache@v2
        id: lfs-cache
        with:
          path: .git/lfs
          key: ${{ runner.os }}-lfs-${{ hashFiles('.lfs-assets-id') }}

      - name: Git LFS Pull
        run: |
          git lfs pull
          git add .
          git reset --hard

      - name: Restore Library cache
        uses: actions/cache@v2
        with:
          path: Library
          key: Library-build-iOS
          restore-keys: |
            Library-build-
            Library-

      - uses: game-ci/unity-builder@v2
        with:
          targetPlatform: iOS

      - uses: actions/upload-artifact@v2
        with:
          name: build-iOS
          path: build/iOS
  
  manageReleases:
    name: Manage Releases and Tags
    needs: [buildWindows, buildAndroid, buildiOS, buildLinux, buildmacOS]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      # Delete the "Old" release
      - name: Delete Old Release
        run: |
          TOKEN=${{ secrets.GITHUB_TOKEN }}
          TAG_NAME="Old"
          RELEASE_ID=$(curl -s -H "Authorization: Bearer $TOKEN" "https://api.github.com/repos/${{ github.repository }}/releases/tags/$TAG_NAME" | grep -m 1 '"id":' | sed -E 's/.*"id": ([0-9]+),?/\1/')
          if [ -n "$RELEASE_ID" ]; then
            curl -X DELETE -H "Authorization: Bearer $TOKEN" "https://api.github.com/repos/${{ github.repository }}/releases/$RELEASE_ID"
          fi

      # Rename the "Latest" release to "Old"
      - name: Rename Latest Release
        run: |
          TOKEN=${{ secrets.GITHUB_TOKEN }}
          OLD_TAG_NAME="Old"
          NEW_TAG_NAME="Latest"
          RELEASE_ID=$(curl -s -H "Authorization: Bearer $TOKEN" "https://api.github.com/repos/${{ github.repository }}/releases/tags/$NEW_TAG_NAME" | grep -m 1 '"id":' | sed -E 's/.*"id": ([0-9]+),?/\1/')
          if [ -n "$RELEASE_ID" ]; then
            curl -X PATCH -H "Authorization: Bearer $TOKEN" -H "Accept: application/vnd.github.v3+json" \
            "https://api.github.com/repos/${{ github.repository }}/releases/$RELEASE_ID" -d "{\"tag_name\":\"$OLD_TAG_NAME\"}"
          fi

      # Create a new release with the "Latest" tag and upload build artifacts
      - name: Create Latest Release
        run: |
          TOKEN=${{ secrets.GITHUB_TOKEN }}
          TAG_NAME="Latest"
          ASSET_PATH="build/*"
          RELEASE_RESPONSE=$(curl -X POST -H "Authorization: Bearer $TOKEN" -H "Accept: application/vnd.github.v3+json" \
          "https://api.github.com/repos/${{ github.repository }}/releases" -d "{\"tag_name\":\"$TAG_NAME\"}")
          RELEASE_ID=$(echo "$RELEASE_RESPONSE" | grep -m 1 '"id":' | sed -E 's/.*"id": ([0-9]+),?/\1/')
          UPLOAD_URL=$(echo "$RELEASE_RESPONSE" | grep -m 1 '"upload_url":' | sed -E 's/.*"upload_url": "([^"]+){[^}]+}",?/\1/')
          for FILE in $ASSET_PATH; do
            UPLOAD_URL="${UPLOAD_URL%\{*}" # Remove template parameters from URL
            curl -X POST -H "Authorization: Bearer $TOKEN" -H "Accept: application/vnd.github.v3+json" \
            -H "Content-Type: $(file -b --mime-type $FILE)" --data-binary @"$FILE" "$UPLOAD_URL?name=$(basename $FILE)"
          done

  deleteOld:
    needs:
      - buildWebGL
      - buildWindows
      - buildmacOS
      - buildLinux
      - buildAndroid
      - buildiOS
    runs-on: ubuntu-latest
    
    steps:
      - name: Check out code
        uses: actions/checkout@v2
        
      - name: Delete Release
        run: |
          # Get the ID of the release with the "Old" tag
          RELEASE_ID=$(curl -s -H "Authorization: Bearer ${{ secrets.SECRET }}" "https://api.github.com/repos/${{ github.repository }}/releases/tags/Old" | jq -r '.id')
          
          if [ -n "$RELEASE_ID" ]; then
            # Delete the release
            curl -X DELETE -H "Authorization: Bearer ${{ secrets.SECRET }}" "https://api.github.com/repos/${{ github.repository }}/releases/$RELEASE_ID"
            echo "Release with tag 'Old' deleted successfully."
          else
            echo "Release with tag 'Old' not found."
          fi
        env:
          SECRET: ${{ secrets.SECRET }}
          
  deployPages:
    needs: buildWebGL
    name: Deploy to Github Pages 🚀
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - uses: actions/download-artifact@v2
        with:
          name: build-WebGL
          path: build

      - name: Deploy 🚀
        uses: JamesIves/github-pages-deploy-action@4.1.4
        with:
          branch: gh-pages
          fOlder: build/WebGL
