name: GameCI Template 🎮

on:
  push:
    branches:
      - main

env:
  UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}

jobs:
  installHub:
    name: Install hub CLI
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install hub CLI
        run: |
          curl -fsSL https://github.com/github/hub/releases/latest/download/hub-linux-amd64-2.14.1.tgz | tar xz
          sudo install -m 755 hub-linux-amd64-2.14.1/bin/hub /usr/local/bin/hub


  
  buildWebGL:
    name: Build for WebGL 🌐
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Create LFS file list
        run: git lfs ls-files -l | cut -d' ' -f1 | sort > .lfs-assets-id

      - name: Restore LFS cache
        uses: actions/cache@v2
        id: lfs-cache
        with:
          path: .git/lfs
          key: ${{ runner.os }}-lfs-${{ hashFiles('.lfs-assets-id') }}

      - name: Git LFS Pull
        run: |
          git lfs pull
          git add .
          git reset --hard

      - name: Restore Library cache
        uses: actions/cache@v2
        with:
          path: Library
          key: Library-build-WebGL
          restore-keys: |
            Library-build-
            Library-

      - uses: game-ci/unity-builder@v2
        with:
          targetPlatform: WebGL

      - uses: actions/upload-artifact@v2
        with:
          name: build-WebGL
          path: build/WebGL

  buildWindows:
    name: Build for Windows 🖥️
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Create LFS file list
        run: git lfs ls-files -l | cut -d' ' -f1 | sort > .lfs-assets-id

      - name: Restore LFS cache
        uses: actions/cache@v2
        id: lfs-cache
        with:
          path: .git/lfs
          key: ${{ runner.os }}-lfs-${{ hashFiles('.lfs-assets-id') }}

      - name: Git LFS Pull
        run: |
          git lfs pull
          git add .
          git reset --hard

      - name: Restore Library cache
        uses: actions/cache@v2
        with:
          path: Library
          key: Library-build-StandaloneWindows64
          restore-keys: |
            Library-build-
            Library-

      - uses: game-ci/unity-builder@v2
        with:
          targetPlatform: StandaloneWindows64

      - uses: actions/upload-artifact@v2
        with:
          name: build-StandaloneWindows64
          path: build/StandaloneWindows64

  buildmacOS:
    name: Build for macOS 🖥️
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Create LFS file list
        run: git lfs ls-files -l | cut -d' ' -f1 | sort > .lfs-assets-id

      - name: Restore LFS cache
        uses: actions/cache@v2
        id: lfs-cache
        with:
          path: .git/lfs
          key: ${{ runner.os }}-lfs-${{ hashFiles('.lfs-assets-id') }}

      - name: Git LFS Pull
        run: |
          git lfs pull
          git add .
          git reset --hard

      - name: Restore Library cache
        uses: actions/cache@v2
        with:
          path: Library
          key: Library-build-StandaloneOSX
          restore-keys: |
            Library-build-
            Library-

      - uses: game-ci/unity-builder@v2
        with:
          targetPlatform: StandaloneOSX

      - uses: actions/upload-artifact@v2
        with:
          name: build-StandaloneOSX
          path: build/StandaloneOSX

  buildLinux:
    name: Build for Linux 🖥️
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Create LFS file list
        run: git lfs ls-files -l | cut -d' ' -f1 | sort > .lfs-assets-id

      - name: Restore LFS cache
        uses: actions/cache@v2
        id: lfs-cache
        with:
          path: .git/lfs
          key: ${{ runner.os }}-lfs-${{ hashFiles('.lfs-assets-id') }}

      - name: Git LFS Pull
        run: |
          git lfs pull
          git add .
          git reset --hard

      - name: Restore Library cache
        uses: actions/cache@v2
        with:
          path: Library
          key: Library-build-StandaloneLinux64
          restore-keys: |
            Library-build-
            Library-

      - uses: game-ci/unity-builder@v2
        with:
          targetPlatform: StandaloneLinux64

      - uses: actions/upload-artifact@v2
        with:
          name: build-StandaloneLinux64
          path: build/StandaloneLinux64

  buildAndroid:
    name: Build for Android 📱
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Create LFS file list
        run: git lfs ls-files -l | cut -d' ' -f1 | sort > .lfs-assets-id

      - name: Restore LFS cache
        uses: actions/cache@v2
        id: lfs-cache
        with:
          path: .git/lfs
          key: ${{ runner.os }}-lfs-${{ hashFiles('.lfs-assets-id') }}

      - name: Git LFS Pull
        run: |
          git lfs pull
          git add .
          git reset --hard

      - name: Restore Library cache
        uses: actions/cache@v2
        with:
          path: Library
          key: Library-build-Android
          restore-keys: |
            Library-build-Android
            Library-Android

      - uses: game-ci/unity-builder@v2
        with:
          targetPlatform: Android

      - uses: actions/upload-artifact@v2
        with:
          name: build-Android
          path: build/Android

  buildiOS:
    name: Build for iOS 📱
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Create LFS file list
        run: git lfs ls-files -l | cut -d' ' -f1 | sort > .lfs-assets-id

      - name: Restore LFS cache
        uses: actions/cache@v2
        id: lfs-cache
        with:
          path: .git/lfs
          key: ${{ runner.os }}-lfs-${{ hashFiles('.lfs-assets-id') }}

      - name: Git LFS Pull
        run: |
          git lfs pull
          git add .
          git reset --hard

      - name: Restore Library cache
        uses: actions/cache@v2
        with:
          path: Library
          key: Library-build-iOS
          restore-keys: |
            Library-build-
            Library-

      - uses: game-ci/unity-builder@v2
        with:
          targetPlatform: iOS

      - uses: actions/upload-artifact@v2
        with:
          name: build-iOS
          path: build/iOS
  
  manageReleases:
    name: Manage Releases and Tags
    needs: [buildWindows, buildAndroid, buildiOS, buildLinux, buildmacOS]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      # Delete the "Old" release
      - name: Delete Old Release
        run: |
          TAG_NAME="Old"
          hub release delete $TAG_NAME || true

      # Rename the "Latest" release to "Old"
      - name: Rename Latest Release
        run: |
          OLD_TAG_NAME="Old"
          NEW_TAG_NAME="Latest"
          hub release edit -m "$NEW_TAG_NAME" "$OLD_TAG_NAME"

      # Create a new release with the "Latest" tag and upload build artifacts
      - name: Create Latest Release
        run: |
          TAG_NAME="Latest"
          ASSET_PATH="build/*"
          hub release create -t "$TAG_NAME"
          for FILE in $ASSET_PATH; do
            hub release edit --attach="$FILE" "$TAG_NAME"
          done
          
  deployPages:
    needs: buildWebGL
    name: Deploy to Github Pages 🚀
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - uses: actions/download-artifact@v2
        with:
          name: build-WebGL
          path: build

      - name: Deploy 🚀
        uses: JamesIves/github-pages-deploy-action@4.1.4
        with:
          branch: gh-pages
          fOlder: build/WebGL
